#!/usr/bin/env perl

#---------------------------------------------------------------------
# Global Pragmas and Module Imports:
#---------------------------------------------------------------------

require 5;
use strict;

use Getopt::Std;

#---------------------------------------------------------------------
# Global Variables:
#---------------------------------------------------------------------

my $VERSION = "4.1";
my $MYNAME = (split m{/}, $0)[-1];
my %opts;

my $USAGE =<<EOT;
usage v$VERSION: $MYNAME <options>

This program takes numbers, one per line, from stdin, and then
calculates the minimum, maximum, mean, and standard deviation 
from those numbers.
options:
    -h        print this message
EOT

#---------------------------------------------------------------------
# Main:
#---------------------------------------------------------------------

getopts("h", \%opts) || die $USAGE;

die $USAGE if (exists $opts{'h'});

my @numbers;

while (<>) {
    chomp;
    push @numbers, $_;
}

my $min = 0;
my $max = 0;
my $sum = 0;

for my $number (@numbers) {
    if ($max) {
        if ($number > $max) {
            $max = $number;
        }
    }
    else {
        $max = $number;
    }
    
    if ($min) {
        if ($number < $min) {
            $min = $number;
        }
    }
    else {
        $min = $number;
    }
    
    $sum += $number;
}

print "min:                $min\n";
print "max:                $max\n";
print "sum:                $sum\n";
my $n = scalar @numbers;
die "ERROR: Count (n) is zero or less.\n" if ($n <= 0);
print "count:              $n\n";
my $mean = $sum / $n;
print "mean:               $mean\n";
my $difference = 0;
my $sd_sum = 0;

for my $number (@numbers) {
    $difference = $number - $mean;
    $sd_sum += $difference * $difference;
}

die "ERROR: Count (n - 1) is zero or less.\n" if (($n - 1) <= 0);
my $std_deviation = sqrt($sd_sum / ($n - 1));
print "standard deviation: $std_deviation\n";
