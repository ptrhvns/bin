#!/usr/bin/env bash

set -Eeuo pipefail

usage() {
    cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [OPTIONS] <HOST>

Setup a remote shell environment.

Options:
    -h      Print this help message and exit
EOF
    exit
}

say() {
    echo -e "### ${1-}" >&2
}

error() {
    say "ERROR: ${1-}"
}

die() {
    error "${1-}"
    exit "${2-1}"
}

parse_opts() {
    while getopts "h" optname; do
        case "${optname}" in
            h)
                usage
                ;;
            \?)
                die "Invalid option: ${OPTARG}"
                ;;
            :)
                die "Invalid option: ${OPTARG} requires an argument"
                ;;
            *)
                break
                ;;
        esac
    done
}

parse_opts "$@"
shift $((OPTIND - 1))

if [[ $# -lt 1 ]]; then
    die "No remote SSH target provided (user@host)"
fi

HOST=${1}
SOURCE_DIR=${HOME}/depot/remote/dotfiles

ssh "${HOST}" "rm -f ~/.bash_profile"
scp "${SOURCE_DIR}/bash_profile" "${HOST}:~/.bash_profile"
ssh "${HOST}" "rm -f ~/.bashrc"
scp "${SOURCE_DIR}/bashrc" "${HOST}:~/.bashrc"
ssh "${HOST}" "rm -f ~/.editrc"
scp "${SOURCE_DIR}/editrc" "${HOST}:~/.editrc"
ssh "${HOST}" "rm -f ~/.inputrc"
scp "${SOURCE_DIR}/inputrc" "${HOST}:~/.inputrc"
ssh "${HOST}" "rm -f ~/.tmux.conf"
scp "${SOURCE_DIR}/tmux.conf" "${HOST}:~/.tmux.conf"
ssh "${HOST}" "rm -f ~/.vimrc"
scp "${SOURCE_DIR}/vimrc" "${HOST}:~/.vimrc"
ssh "${HOST}" "rm -rf ~/.vim"
