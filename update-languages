#!/usr/bin/env bash

set -Eeuo pipefail

usage() {
    cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [OPTIONS]

Update programming languages.

Options:
    -h      Print this help message and exit
EOF
    exit
}

say() {
    echo -e "### ${1-}" >&2
}

error() {
    say "ERROR: ${1-}"
}

die() {
    error "${1-}"
    exit "${2-1}"
}

parse_opts() {
    while getopts "h" optname; do
        case "${optname}" in
            h)
                usage
                ;;
            \?)
                die "Invalid option: ${OPTARG}"
                ;;
            :)
                die "Invalid option: ${OPTARG} requires an argument"
                ;;
            *)
                break
                ;;
        esac
    done
}

parse_opts "$@"
shift $((OPTIND - 1))

if command -v pyenv 1>/dev/null 2>&1; then
    # Requires pyenv-update plugin.
    echo
    echo "### Updating with pyenv ..."
    echo
    pyenv update
fi

if command -v pip 1>/dev/null 2>&1; then
    echo
    echo "### Updating with pip ..."
    echo
    pip install --upgrade pip
fi

if command -v nodenv 1>/dev/null 2>&1; then
    # Requires nodenv-update plugin.
    echo
    echo "### Updating with nodenv ..."
    echo
    nodenv update
fi

if command -v npm 1>/dev/null 2>&1; then
    echo
    echo "### Updating with npm ..."
    echo
    npm install --global npm
fi

if command -v goenv 1>/dev/null 2>&1; then
    echo
    echo "### Updating with goenv ..."
    echo
    (
        cd "$(goenv root)" || return
        git pull
    )
fi
