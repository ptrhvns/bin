#!/usr/bin/env bash

set -e

dirty_check_git

thumbdrive_directory=/Volumes/thumbdrive

if [ ! -d $thumbdrive_directory ]; then
    echo -n ">>> "
    echo -ne "\033[38;5;124m"
    echo -n "ERROR"
    echo -ne "\033[0m"
    echo ": thumbdrive directory not found: ${thumbdrive_directory}"
    echo
    exit 1
fi

git_home_directories=(
    ~/bin
    ~/doc/personal
    ~/doc/professional
    ~/doc/projects
    ~/src/personal/99bottles
    ~/src/personal/algorithms
    ~/src/personal/alt-project
    ~/src/personal/angular2-reddit-base
    ~/src/personal/angular2-tour-of-heroes
    ~/src/personal/codeschool
    ~/src/personal/css-grid
    ~/src/personal/ember-cli-star-rating
    ~/src/personal/food
    ~/src/personal/foreclojure
    ~/src/personal/js-assessment
    ~/src/personal/landingpage
    ~/src/personal/mealhawk
    ~/src/personal/my-new-app
    ~/src/personal/mysite
    ~/src/personal/rails
    ~/src/personal/rarwe
    ~/src/personal/react_tutorial
    ~/src/personal/rust_book
    ~/src/personal/sandbox
    ~/src/personal/tdd_presentation
    ~/src/personal/vetorocket
    ~/src/personal/vue_guide
    ~/src/personal/wt
    ~/src/personal/xtap
    ~/src/rcfiles
)

git_thumbdrive_directories=(
    $thumbdrive_directory/pete/bin
    $thumbdrive_directory/pete/doc/personal
    $thumbdrive_directory/pete/doc/professional
    $thumbdrive_directory/pete/doc/projects
    $thumbdrive_directory/pete/src/personal/99bottles
    $thumbdrive_directory/pete/src/personal/algorithms
    $thumbdrive_directory/pete/src/personal/alt-project
    $thumbdrive_directory/pete/src/personal/angular2-reddit-base
    $thumbdrive_directory/pete/src/personal/angular2-tour-of-heroes
    $thumbdrive_directory/pete/src/personal/codeschool
    $thumbdrive_directory/pete/src/personal/css-grid
    $thumbdrive_directory/pete/src/personal/ember-cli-star-rating
    $thumbdrive_directory/pete/src/personal/food
    $thumbdrive_directory/pete/src/personal/foreclojure
    $thumbdrive_directory/pete/src/personal/js-assessment
    $thumbdrive_directory/pete/src/personal/landingpage
    $thumbdrive_directory/pete/src/personal/mealhawk
    $thumbdrive_directory/pete/src/personal/my-new-app
    $thumbdrive_directory/pete/src/personal/mysite
    $thumbdrive_directory/pete/src/personal/rails
    $thumbdrive_directory/pete/src/personal/rarwe
    $thumbdrive_directory/pete/src/personal/react_tutorial
    $thumbdrive_directory/pete/src/personal/rust_book
    $thumbdrive_directory/pete/src/personal/sandbox
    $thumbdrive_directory/pete/src/personal/tdd_presentation
    $thumbdrive_directory/pete/src/personal/vetorocket
    $thumbdrive_directory/pete/src/personal/vue_guide
    $thumbdrive_directory/pete/src/personal/wt
    $thumbdrive_directory/pete/src/personal/xtap
    $thumbdrive_directory/pete/src/rcfiles
)

git_home_directories_length=${#git_home_directories[@]}

if [ $git_home_directories_length -lt 1 ]; then
    echo -n ">>> "
    echo -ne "\033[38;5;124m"
    echo -n "ERROR"
    echo -ne "\033[0m"
    echo ": no Git repositories list in home directory"
    echo
    exit 1
fi

for i in $(seq 0 $(expr $git_home_directories_length - 1)); do
    src=${git_home_directories[$i]}
    dest=${git_thumbdrive_directories[$i]}

    (
        cd $src
        git gc --auto
    )

    if [[ ! -d $dest ]]; then
        echo ">>> Creating $dest"
        mkdir -p $(dirname $dest)
        git clone $src $dest
        echo
    else
        echo ">>> Updating $dest"
        cd $dest

        # if [ ! -d .git ]; then
            # git init
        # fi;

        git gc --auto
        git pull $src
        echo
    fi

    # if [[ -d $src ]]; then
        # echo ">>> Updating $src"
        # cd $src
        # git gc --auto
        # git pull $dest

        # if [ -e .gitmodules ]; then
            # git submodule init
            # git submodule update
        # fi

        # echo
    # fi
done

echo ">>> Unmounting thumbdrive"
cd && diskutil unmount thumbdrive

echo
