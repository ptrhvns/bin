#!/usr/bin/env bash

set -Eeuo pipefail

usage() {
    cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [OPTIONS]

Update OS packages.

Options:
    -h      Print this help message and exit
EOF
    exit
}

say() {
    echo -e "### ${1-}" >&2
}

error() {
    say "ERROR: ${1-}"
}

die() {
    error "${1-}"
    exit "${2-1}"
}

parse_opts() {
    while getopts "h" optname; do
        case "${optname}" in
            h)
                usage
                ;;
            \?)
                die "Invalid option: ${OPTARG}"
                ;;
            :)
                die "Invalid option: ${OPTARG} requires an argument"
                ;;
            *)
                break
                ;;
        esac
    done
}

parse_opts "$@"
shift $((OPTIND - 1))

if [[ ! -f "/etc/os-release" ]]; then
    echo "ERROR: /etc/os-release not found" 1>&2
    exit 1
fi

# shellcheck disable=SC2312
if [[ "$(grep -c 'Ubuntu' /etc/os-release)" -gt 0 ]]; then
    echo
    echo "### Updating Ubuntu OS packages ..."
    echo
    sudo apt update -y
    sudo apt upgrade -y
    sudo apt autoremove -y
elif [[ "$(grep -c 'Fedora Linux' /etc/os-release)" -gt 0 ]]; then
    echo
    echo "### Updating Fedora Linux OS packages ..."
    echo
    sudo dnf -y upgrade
    sudo dnf -y autoremove
elif [[ "$(grep -c 'Rocky Linux' /etc/os-release)" -gt 0 ]]; then
    echo
    echo "### Updating Rocky Linux OS packages ..."
    echo
    sudo dnf -y upgrade
    sudo dnf -y autoremove
elif [[ "$(grep -c 'Red Hat Enterprise Linux' /etc/os-release)" -gt 0 ]]; then
    echo
    echo "### Updating Red Hat Enterprise Linux OS packages ..."
    echo
    sudo dnf -y upgrade
    sudo dnf -y autoremove
else
    echo "ERROR: unsupported OS" 1>&2
    exit 1
fi
